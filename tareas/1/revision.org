* Comentarios generales

1. *¬øPor qu√© tanto =sleep()=*

   Eduardo y Enrique me hicieron un muy buen comentario; me permito rescatarlo,
   creo que es de inter√©s de todos:

   #+begin_quote
    En el c√≥digo se nota mejor la disminuci√≥n de la inanici√≥n si se quitan los
    "sleep", pero fueron puestos para poder visualizar de mejor forma como
    suced√≠a la concurrenc√≠a y que lo hiciera sin errores.
   #+end_quote

   Mi respuesta:

   No comprendan al =sleep()= como parte de /la inanici√≥n/. Como les coment√© al
   inicio de esa unidad, el =sleep()= en nuestros programas cumple tres
   prop√≥sitos:
   1. /Simula el trabajo real/. Nuestros problemas son √∫nicamente jueguitos
      conceptuales, que /modelan interacci√≥n/ que opera en el mundo real, con
      cargas paralelizables /de las cuales carecemos/.
   2. El usuario humano no puede apreciar muchos patrones de interacci√≥n, y por
      eso las /alentejamos/ artificialmente
   3. Para /forzar la mano/ del planificador de Python y obligarlo a alternar
      entre hilos en programas demasiado simples para que realmente ocurra la
      interacci√≥n que proponemos
   4. Seguro podemos encontrar otras razones üòâ Pero bueno, la inanici√≥n se
      produce como un /patr√≥n sub√≥ptimo/, independientemente de la escala de
      tiempo. Si tenemos un sistema con inanici√≥n, √©sta se presentar√° /de alguna
      manera/ incluso si reducimos u omitimos los =sleep()=. Tal vez con menor
      intensidad... pero estar√° ah√≠.
2. *Ubicaci√≥n de los comentarios*

   He visto que es com√∫n que sigan el siguiente patr√≥n al escribir sus
   comentarios:
   #+begin_src python
     while True: # Ciclo infinito para que el trabajador no termine su ejecuci√≥n nunca (a menos que se cierre el programa).

     num_alumnos =  random.randint(1,20) #numero de alumnos que quieren una asesoria con el profesor
     semprofesor = threading.Semaphore(1)  # Sem√°foro para controlar acceso al profesor
     semalumnos = threading.Semaphore(capacidadMax-1)   # Sem√°foro para controlar n√∫mero de alumnos en el cubiculo, se puede ver como las sillas disponibles

     conexiones = [] # Aqu√≠ se tendr√° un arreglo compartido de conexiones para que los hilos puedan responder la cnexi√≥n correspondiente
     def jefe(conexion): # Preguntar si el jefe ser√° un hilo o podemos manejarlo √∫nicamente de esta manera

     mutex = threading.Semaphore(1)  # Para garantizar exclusi√≥n mutua
     gato_comiendo = threading.Semaphore(0)  # Inicializado en 0 para que el gato espere a que termine el rat√≥n
     raton_comiendo = threading.Semaphore(0)  # Inicializado en 0 para que el rat√≥n espere a que termine el gato
   #+end_src
   Si bien esto es v√°lido, y "pega" el comentario a /lo comentado/, va quedando
   demasiado ancho, lo cual dificulta la lectura
   - Se considera /de buen estilo/ no escribir c√≥digo m√°s ancho que 80
     columnas, de ser posible
   - Para escribir un vol√∫men de texto mayor a 3 o 4 palabras, consideren poner
     los comentarios /en la l√≠nea anterior/ al objeto descrito, y /no a la
     derecha/ del mismo.
   - Y claro, estas son /recomendaciones de estilo/, no requisitos de ninguna
     manera. El c√≥digo que escriben es v√°lido. (¬°o tengo que reportarles d√≥nde
     /torci√≥ el rabo/!)
3. *No te repitas (Don't Repeat Yourself, DRY)*

   Es muy frecuente ver en su c√≥digo que el cuerpo de una funci√≥n se repite,
   sobre todo en casos como la /intersecci√≥n de caminos/ o el /cruce de la
   balsa/, en que todos los hilos son de desarrollo potencialmente igual, con
   diferencias en alg√∫n detalle circunstancial.

   Para c√≥digo tan sencillo como esta tarea, no es gran cosa... pero los h√°bitos
   de programaci√≥n se forman de muchos peque√±os micro-h√°bitos. Les sugiero muy
   fuertemente siempre preguntarse si es posible /repetirse menos/.

   DRY surge de la observaci√≥n de un /anti-patr√≥n/ o de un /olor de c√≥digo/ en
   que hay c√≥digo muy similar repetido. El problema con esto es que si
   acostumbran escribir as√≠, a futuro tendr√°n c√≥digo de muy dif√≠cil
   mantenimiento, y tendr√°n que estar recordando corregir el mismo detalle /en
   m√∫ltiples lugares/. Siempre que realicen los mismos pasos con muy peque√±as
   modificaciones entre uno y otro, piensen si es posible extraerlo a una
   funci√≥n o parametrizarlo de forma que haya una √∫nica copia.

* Calificaciones

** Becerril Erick
- Documentaci√≥n :: [[./BecerrilErick/Informacion.md][Informacion.md]]
- Archivos :: [[./BecerrilErick/Elevador.py][Elevador.py]]
- Problema resuelto :: El elevador
- Comentarios ::
  - Ojo con la redacci√≥n üòâ
    - Cuando dices que /Python es un lenguaje mucho m√°s f√°cil de leer y de
      escribirse/, tendr√≠as que cerrar tu comparaci√≥n: ¬øM√°s f√°cil que qu√©?
    - No puedes usar /demasiadas/ para describir algo bueno. Si el lenguaje
      tiene /demasiadas bibliotecas/, suena a que /hay tantas que me cost√≥
      trabajo encontrar la buena/...
  - ¬°Excelente que uses un mecanismo de sincronizaci√≥n distinto de los que vimos
    en clase!
  - Pero... ¬°El c√≥digo no es funcional! ¬°Y por poquitito! üôÅ
    #+begin_src diff
      diff --git a/tareas/1/BecerrilErick/Elevador.py b/tareas/1/BecerrilErick/Elevador.py
      index f90682a..4cb0d49 100644
      --- a/tareas/1/BecerrilErick/Elevador.py
      +++ b/tareas/1/BecerrilErick/Elevador.py
      @@ -32,7 +32,7 @@ class Elevador:
			       self.usuarios.remove(usuario)
 
		   if not self.usuarios and self.todos_han_llegado.is_set():
      -                print(Todos los usuarios han llegado a su destino. Deteniendo el elevador.)
      +                print('Todos los usuarios han llegado a su destino. Deteniendo el elevador.')
		       break
 
		   if self.piso_actual == 5:
    #+end_src
    - Esto es: El c√≥digo tal como lo pusiste /no es funcional/, porque no puede
      ejecutarse. Agregando las comillas (='=) ya funciona todo bien.
- Calificaci√≥n :: 8

** Ceniceros Mariaca, Ramirez Martinez
- Archivos :: [[./CenicerosMariaca-RamirezMartinez/Tarea1.html][Tarea1.html]], [[./CenicerosMariaca-RamirezMartinez/webServer.py][webServer.py]]
- Problema resuelto :: Servidor Web
- Comentarios ::
  - ¬°Muy bien! Implementaci√≥n sencilla y al punto.
    - No es para menos: el problema es muy sencillo. ¬°pero es lo que corre en el
      verdadero coraz√≥n de much√≠simos proyectos reales de servidor en el mundo!
  - ¬°Pero ojo! Cayeron en un error muy habitual en que caemos los novatos en
    Python:
    #+begin_src diff

      diff --git a/tareas/1/CenicerosMariaca-RamirezMartinez/webServer.py b/tareas/1/CenicerosMariaca-RamirezMartinez/webServer.py
      index 4751c7e..17b6c05 100644
      --- a/tareas/1/CenicerosMariaca-RamirezMartinez/webServer.py
      +++ b/tareas/1/CenicerosMariaca-RamirezMartinez/webServer.py
      @@ -40,7 +40,7 @@ def Boss():
	       print('      Boss: Esperando conexion de red...\n')
	       requestClient.acquire()
	       print('      Boss: Despertando a un trabajador...\n')
      -        wakeWorker.release
      +        wakeWorker.release()
	       print('      Boss: Creando nuevo trabajador...\n')
	       threading.Thread(target=worker, args=[]).start()
    #+end_src
    - Esto es: el codigo tal como lo pusieron /no es funcional/, porque no se
      est√° liberando el sem√°foro. Pero agregando el =()= ya funciona todo bien.
- Calificaci√≥n :: 8

** Cervantes Eduardo, Nu√±ez Enrique
- Documentaci√≥n :: [[./CervantesEduardo-Nu√±ezEnrique/README.md][README.md]]
- Archivos :: [[./CervantesEduardo-Nu√±ezEnrique/Interseccion_de_caminos.py][Interseccion_de_caminos.py]]
- Problema resuelto :: Intersecci√≥n de caminos
- Comentarios ::
  - ¬°Muy bien por lanzarse a resolver con un refinamiento! üòÉ
  - Dej√© la respuesta a uno de sus comentarios en la secci√≥n de /comentarios
    generales/.
  - Buena implementaci√≥n, y muy bien documentada. ¬°Un gusto!
    - Como comentario para mejorar su c√≥digo, sugerir√≠a modularizar y adoptar el
      /enfoque DRY: Don't Repeat Yourself/ (lee la nota general al respecto,
      arriba) por los segmentos de la funci√≥n =intersection_change(a, carril)=,
      l√≠n. 26‚Äì58.
      - Pero en realidad, es la repetici√≥n del mismo c√≥digo dentro de una
        condicional sobre =carril=, de ==carril == 1= a =carril == 4=,
        variando √∫nicamente el nombre de la variable a considerar
      - Ser√≠a mejor, en vez de cuatro arreglos tener un arreglo multidimensional
        =interseccion=, y referirse a =interseccion[carril]=. ¬°Listo! Menor
        repetici√≥n üòÉ
- Calificaci√≥n :: 10

** Chagoya Gonzalez
- Documentaci√≥n :: [[./ChagoyaGonzalez/ejercicio.txt][ejercicio.txt]]
- Archivos :: [[./ChagoyaGonzalez/ejercicio.py][ejercicio.py]]
- Problema resuelto :: Los alumnos y el asesor
- Comentarios ::
  - Desafortunadamente, como ustedes mismos lo identifican en su resoluci√≥n, la
    interacci√≥n no es todo lo profunda que deber√≠a ser üôÅ
  - En realidad, el profesor se va mucho antes de terminar su jornada. El
    profesor /atiende/ √∫nicamente mientras su hilo est√° vivo. Si movemos la
    l√≠nea 79 (=print('Se ha terminado...')=) a su lugar correcto (l√≠nea 52, pero
    /fuera/ del =while=), pueden ve que el profesor se fue mucho antes de
    tiempo.
    - No es necesario s√≥lo un =mutex= para que no hablen dos alumnos a la vez,
      hace falta tambi√©n una (¬°o varias!) =se√±alizaci√≥n= para que el profe
      interact√∫e con los alumnos /como se debe/, como ustedes lo identificaron.
    - No reporten =Alumno {id_alumno} est√° hablando con el profesor=. El hilo
      =alumno()= s√≥lo debe poder decir lo que dice el alumno, y /√∫nicamente el
      hilo =profesor()= debe poder contestarle/.
- Calificaci√≥n :: 7

** Cruz Vargas, Garciliano Diaz
- Archivos :: [[./CruzVargas-GarcilianoDiaz/detalles.org][detalles.org]], [[./CruzVargas-GarcilianoDiaz/tarea.py][tarea.py]]
- Problema resuelto :: El servidor Web
- Comentarios ::
  - ¬°Excelente que consideren dar instrucciones al despistado que lo ejecuta sin
    revisar detalles!
  - ¬°Excelente que faciliten la lectura por rol de la salida!
  - ... Pero me parece que la sincronizaci√≥n no est√° funcionando correctamente üôÅ
    - Cuando generamos √∫nicamente un trabajador, tras algunos segundos, el jefe
      sigue recibiendo solicitudes sin parar a asegurarse de que haya qui√©n la
      atienda:
      #+begin_src text
	$ python3 tarea.py 1
	(...)
	Jefe: Recibiendo petici√≥n 32
	Jefe: Recibiendo petici√≥n 33
	tepvb
	Trabajador 0: Termin√≥ de ejecutarse None, se enviaron 1197196 bytes.
	Trabajador 0: Atendiendo petici√≥n 4
	Jefe: Recibiendo petici√≥n 34
	Jefe: Recibiendo petici√≥n 35
	(...)
      #+end_src
      - Bueno, pero me van a decir que ese requisito no estaba bien
        formulado. ¬°Tienen raz√≥n! Tengo que afinar mi planteamiento
    - En tanto, si generamos 100 trabajadores:
      #+begin_src text
	$ python3 tarea.py 1
	(...)
	Trabajador 12: Termin√≥ de ejecutarse None, se enviaron 690964 bytes.
	Trabajador 12: Atendiendo petici√≥n 472
	Jefe: Recibiendo petici√≥n 53
	ogudc
	Trabajador 60: Termin√≥ de ejecutarse None, se enviaron 2071119 bytes.
	Trabajador 60: Atendiendo petici√≥n 473
      #+end_src
      - ¬°Estamos atendiendo solicitudes /que no han llegado a√∫n/!
      - Parte (por lo menos) del error viene de la l√≠nea 51: El
        =self.mutex.release()= tras crear el hilo resulta innecesario...
      - Adem√°s, en la l√≠nea 32, el =trabajador()= hace un
        =self.mutex.release()=... ¬°sobre un sem√°foro que no est√°n usando como
        mutex! (el uso /real/ que quieren darle es el de se√±alizaci√≥n).
      - Corrigiendo eso, ya se maneja un ritmo m√°s consistente, incluso si
        lanzamos /much√≠simos/ trabajadores:
	#+begin_src text
	  $ python3 tarea.py 1000
	  (...)
	  Trabajador 308: Termin√≥ de ejecutarse None, se enviaron 1203502 bytes.
	  Jefe: Recibiendo petici√≥n 322
	  Trabajador 322: Atendiendo petici√≥n 311
	  Jefe: Recibiendo petici√≥n 323
	  Trabajador 323: Atendiendo petici√≥n 311
	  cctdi
	  Trabajador 316: Termin√≥ de ejecutarse None, se enviaron 1069064 bytes.
	  Jefe: Recibiendo petici√≥n 324
	  Trabajador 324: Atendiendo petici√≥n 312
	  tgdnj
	  (...)
	#+end_src
- Calificaci√≥n :: 7.5

** Galvan Ricardo
- Documentaci√≥n :: [[./GalvanRicardo/Tarea1.txt][Tarea1.txt]]
- Archivos :: [[./GalvanRicardo/cruceDelRio.py][cruceDelRio.py]]
- Problema resuelto :: El cruce del r√≠o
- Comentarios ::
  - Hmmm... ¬°Interesante! Creo que es la primera vez que veo una estrategia como
    la que propones.
    - Y a pesar de que la describes, tuve que revisar bien la implementaci√≥n y
      la ejecuci√≥n para entender la l√≥gica. ¬°Interesante! =[11,12,13,15]= no es
      una combinaci√≥n lgal, as√≠ que se cambia =11= por =14=:
      #+begin_src text
	Viajamos en la balsa: [11, 12, 13, 15] 
	Viajamos los hackers: [12] y los serfs: [11, 13, 15]
	[11]: Soy serf, Me bajo de la balsa
	[14]: Soy hacker, Me subo a la balsa
      #+end_src
    - Lo que no entiendo a√∫n es por qu√© en varios casos se bajan incluso los
      cuatro, para volver a subir a otros 4 de la misma alineaci√≥n:
      #+begin_src text
	Viajamos en la balsa: [17, 18, 19, 16] 
	Viajamos los hackers: [18, 16] y los serfs: [17, 19]
	[17]: Soy serf, Me bajo de la balsa
	[19]: Soy serf, Me bajo de la balsa
	[16]: Soy hacker, Me bajo de la balsa
	[18]: Soy hacker, Me bajo de la balsa
      #+end_src
    - Como sea... ¬°Ojo! no est√°s protegiendo el acceso a =hackersDentro= o a
      =serfsDentro= con un mutex. No me parece que =multiplex= proteja de acceso
      concurrente.
- Calificaci√≥n :: 9

** Garces Carlos, Jimenez Patricia
- Documentaci√≥n :: [[./GarcesCarlos-JimenezPatricia/README.md][README.md]]
- Archivos :: [[./GarcesCarlos-JimenezPatricia/Ejercicio1.py][Ejercicio1.py]]
- Problema resuelto :: El servidor Web
- Comentarios ::
  - As√≠ es, lo √∫nico que hace falta para resolver este problemita es una
    /se√±alizaci√≥n/
    - Tal vez sea demasiado sencillo... ¬°pero cumple a la perfecci√≥n con lo que
      les solicit√©!
    - (... ¬øme toca dificultar el planteamiento /pa'l futuro/?)
- Calificaci√≥n :: 10

** Gomez, Juan Pablo
- Documentaci√≥n :: [[./Gomez_JuanPablo/Detalles.txt][Detalles.txt]]
- Archivos :: [[./Gomez_JuanPablo/Tarea1-Sistop.py][Tarea1-Sistop.py]]
- Problema resuelto :: Santa Claus
- Comentarios ::
  - Desafortunadamente, me parece que no cumples con las premisas del
    planteamiento üôÅ
  - Los =elfos= no se juntan de 3 en 3 para recibir la ayuda de Santa Claus
    - S√≥lo se aseguran con =mutex= de recibirla de uno en uno
    - =santa_claus()= incluye como parte de su recorrido anual el ayudar a tres
      elfos despu√©s del paseo en trineo, ¬°pero los elfos no esperan por √©ste
    - Lo mismo con los renos: =santa_claus()= espera a que vengan 9, ¬°pero
      pueden haberse ya retirado al Caribe de vuelta para cuando √©ste se
      despierta!
- Calificaci√≥n :: 7.5

** Hernandez Alberto Vazquez Ivan
- Documentaci√≥n :: [[./HernandezAlbertoVazquezIvan/HernandezAlbertoVazquezIvan.txt][HernandezAlbertoVazquezIvan.txt]]
- Archivos :: [[./HernandezAlbertoVazquezIvan/HernandezAlbertoVazquezIvan.py][HernandezAlbertoVazquezIvan.py]]
- Problema resuelto :: Los alumnos y el asesor
- Comentarios ::
  - Tal vez sea problema de redacci√≥n en mi planteamiento. ¬°Realmente quieres
    hablar con tu asesor! Si no hay lugar en el cub√≠culo, ¬°te quedas parado
    frente a la puerta hasta que alguien sale y libera una silla! ¬øQu√© es eso de
    ¬´no encontr√≥ espacio en el cub√≠culo y se fue¬ª? üòâ
  - ¬°Uy! El profe es medio mala onda... En vez de esperar a que salgan los
    estudiantes que est√°n hablando con √©l, cada 1800 segundos (¬Ω hora) dice
    "permis√≠√≠√≠√≠√≠√≠to", y se echa a dormir
    - En realidad, tendr√≠a que estar durmiendo hasta que el primer alumno tocara
      a su puerta
    - y volver a ponerse a dormir si la lista de alumnos que quiere hablarle sea
      de longitud 0 (y sus sillas est√©n vac√≠as).
    - Ah√≠ est√°, a fin de cuentas, la respuesta a la pregunta que me planteas: El
      profesor puede quedarse dormido ante un =acquire()=, aunque √©ste llegue
      hasta el otro d√≠a ‚Äî o, m√°s elegante, s√≠ podr√≠as regalarle un monitoreo con
      un =time.sleep(1800)= (o cuanto fuera) para que, al terminar su turno,
      dijera ¬´Bueeeeno, ¬°hora de irme a casita!¬ª.
  - Los alumnos no esperan a la interacci√≥n con el profesor
    - Hacen sus preguntas, pero simulan la respuesta con un =time.sleep(1)=, no
      esperan a que el profesor les resuelva la duda
- Calificaci√≥n :: 8

** Hernandez Jonathan, Perez Paola
- Documentaci√≥n :: [[./HernandezJonathan-PerezPaola/README.md][README.md]]
- Archivos :: [[./HernandezJonathan-PerezPaola/elevador.py][elevador.py]]
- Problema resuelto :: El elevador
- Comentarios ::
  - ¬°Guau! ¬°Buen√≠simo! Nadie me hab√≠a sugerido su estrategia para reducir la
    inanici√≥n. ¬°Me encant√≥! üòÉ
  - Muy buen documento de apoyo, ayuda bien a comprender el desarrollo del
    c√≥digo.
- Calificaci√≥n :: 10

** Hernandez Samuel
- Documentaci√≥n :: [[./HernandezSamuel/Tarea1.txt][Tarea1.txt]]
- Archivos :: [[./HernandezSamuel/tarea1.py][tarea1.py]]
- Problema resuelto :: Los alumnos y el asesor
- Comentarios ::
  - Tu respuesta es *casi* correcta... pero no considera algo importante: Para
    poder responder al estudiante, ¬°el =profesor()= tiene que estar vivo!
    - El =profesor()= est√° vivo (activo) mientras no haya terminado la ejecuci√≥n
      de su funci√≥n. ¬øQu√© pasa si al terminar la funci√≥n agregamos (l√≠nea 27) un
      mensaje?

      #+begin_src python
	print('*** El profesor termina su turno y se va.')
      #+end_src
    - ...¬°Parecer√≠a que sigue habiendo interacci√≥n!
      #+begin_src text
	El profesor ha terminado de atender al estudiante.
	El profesor ha terminado de atender al estudiante.
	Estudiante 4 sale del cub√≠culo.
	Estudiante 2 entra al cub√≠culo.
	*** El profesor termina su turno y se va.
	El profesor se despierta y atiende al estudiante.
	Estudiante 5 pregunta al profesor.
	Estudiante 3 quiere hacer una pregunta.
	Estudiante 3 entra al cub√≠culo.
	El profesor ha terminado de atender al estudiante.
	Estudiante 5 sale del cub√≠culo.
      #+end_src
      ...Esto ocurre porque la respuesta /no te la da el profesor/, sino que el
      alumno mismo
      #+begin_src python
	def estudiante(numero):
	    preguntas_hechas = 0
	    while preguntas_hechas < preguntas_por_estudiante:
		# El estudiante quiere hacer una pregunta
		print(f"Estudiante {numero} quiere hacer una pregunta.")
		cubiculo.acquire()

		# El estudiante entra al cub√≠culo
		print(f"Estudiante {numero} entra al cub√≠culo.")

		# El profesor se despierta y atiende al estudiante
		mutex.acquire()
		print("El profesor se despierta y atiende al estudiante.")

		# Realiza su pregunta
		print(f"Estudiante {numero} pregunta al profesor.")
		time.sleep(1)  # Simula la respuesta del profesor
		preguntas_hechas += 1

		# Termina su turno
		print("El profesor ha terminado de atender al estudiante.")
		mutex.release()
      #+end_src
    - No deber√≠a ser el alumno el que d√© respuesta a sus preguntas (a menos
      que...  ¬øm√°s que un profesor sea una sesi√≥n de psicoan√°lisis? üòâ)
- Calificaci√≥n :: 8

** Lara Aguilar, Zu√±iga Reyes
- Documentaci√≥n :: [[./LaraAguilar-Zu√±igaReyes/Tarea1SO.pdf][Tarea1SO.pdf]]
- Archivos :: [[./LaraAguilar-Zu√±igaReyes/Tarea1SO.py][Tarea1SO.py]]
- Problema resuelto :: El servidor Web
- Comentarios ::
  - La resoluci√≥n es correcta en lo general: Lo m√°s importante para resolver
    este planteamiento es la /se√±alizaci√≥n/ que manejas con =trabajadores= entre
    =jefe()= y =trabajador()es=. Sin embargo...
    - No proteges al arreglo =trabajadores_disponibles= de accesos simult√°neos
      mediante un /mutex/.
    - Al lanzar un =trabajadores.release()= desde =trabajador()=, incrementan el
      contador m√°s all√° de lo que requiere la /se√±alizaci√≥n/, pierde su
      funcionalidad.
    - Sin embargo, si comentas la l√≠nea #35 (=trabajadores.release()=), funciona
      correctamente.
- Calificaci√≥n :: 9

** Lopez Ernesto
- Documentaci√≥n :: [[./LopezErnesto/ErnestoLopez_Tarea1.txt][ErnestoLopez_Tarea1.txt]]
- Archivos :: [[./LopezErnesto/cruce_rio.py][cruce_rio.py]], [[./LopezErnesto/servidor_web.py][servidor_web.py]]
- Problema resuelto :: El cruce del r√≠o / El servidor Web
- Comentarios ::
  - Notar√°s que me tard√© bastante m√°s de lo que les promet√≠ en evaluar la
    tarea...
    - Es una tarea dif√≠cil de evaluar: No voy sobre los resultados, sino sobre
      el desarrollo de c√≥digo de cada uno de ustedes
    - Formalmente, tendr√≠a que enfocarme en /una sola soluci√≥n/ por parte de
      cada equipo
    - Pero bueno... Como sea, ¬°muy bien por resolver m√°s all√° de lo que les
      planteo!
  - Respecto al /Servidor Web/:
    - Apuntas en comentario que quedaba pendiente preguntar si el =jefe()= ten√≠a
      que ser un hilo expl√≠cito. Recuerda que el hilo /base/ de un proceso es
      tan hilo como todos los dem√°s, as√≠ que tu estrategia es v√°lida.
    - El sem√°foro =mutex_trabajador= no implementa un patr√≥n =mutex=, sino
      =se√±alizaci√≥n=. El =jefe()= lo va liberando conforme van llegando nuevas
      conexiones, y eso va despertando =trabajador()es=.
    - Ojo que no est√°s protegiendo =conexones= de acceso concurrente: Si bien en
      =trabajador()= s√≠ usas =mutex_conexion= para hacer =conexiones.pop(0)=, no
      lo haces en =jefe()=.
    - La informaci√≥n de contabilidad no llega de vuelta a
      =jefe()=. Piensa... ¬øpodr√≠as hac√©rsela llegar con el dise√±o actual, de
      forma que tras cierto tiempo imprimiera el tiempo que ha atendido cada uno
      de los trabajadores?
  - Respecto al /Cruce del r√≠o/:
    - ¬°Bien! ¬°Un alumno por lo menos le trabaj√≥ a la representaci√≥n visual del
      problema (del /cruce del r√≠o/) üòÉ
    - La resoluci√≥n es correcta, no me dejas mucho que agregar
    - Revisa la nota general: /DRY: No te repitas/
- Calificaci√≥n :: 10

** Mart√≠nez Pedro
- Documentaci√≥n :: [[./Mart√≠nezPedro/PMV_GatosyRatones.txt][PMV_GatosyRatones.txt]]
- Archivos :: [[./Mart√≠nezPedro/GatosyRatones.py.py][GatosyRatones.py.py]]
- Problema resuelto :: Gatos y ratones
- Comentarios ::
  - ¬°Piensa en la comodidad de tus lectores m√°s que en la tuya misma!

    En vez de exigirles que /abran el .txt en pantalla completa/, resulta m√°s
    ‚Äúconsiderado‚Äù que ajustes el ancho de tu p√°gina. T√≠picamente se considera
    que un documento de texto debe cortar a los ‚âà80 caracteres para verse bien
    en configuraciones est√°ndar y todo tipo de dispositivos.
    - ¬°No dirijas tu documentaci√≥n a un usuario √∫nico! Puede haber cientos de
      personas que descarguen tu c√≥digo del repositorio. No pienses √∫nicamente
      en m√≠ como lector.
  - Indicas que decidiste usar sem√°foros, pero no indicas /qu√© patrones/ usaste
    para ello. Veo que por lo menos usas un mutex (llamado =mutex=) y dos
    apagadores cruzados (=gato_comiendo= y =raton_comiendo=).
    - Sin embargo... Me parece que lo que implementaste no permite el nivel de
      concurrencia deseable (√∫nicamente puede utilizarse un plato a la vez: No
      hay nada que verifique si hay lugar en los platos, s√≥lo hay un estado
      ‚Äúcomiendo‚Äù posible, tal vez innecesariamente protegido por el =mutex=)
    - Tanto =gato()= como =raton()= son muy caballerosos y /ceden el turno/ al
      terminar su rato de alimento, dando un =release()= a la clase contraria.
      ¬°Pero nunca verifican si su enemigo hist√≥rico natural est√° en la zona! (no
      implementaste nada que verificara si existe posibilidad de que el gato
      /atrape/ al rat√≥n, por m√°s que no le guste hacerlo)
- Calificaci√≥n :: 8

** Mart√≠nez Santiago
- Documentaci√≥n :: [[./Mart√≠nezSantiago/descripcion_problema.txt][descripcion_problema.txt]]
- Archivos :: [[./Mart√≠nezSantiago/ejercicio_gatos.py]]
- Problema resuelto :: Gatos y ratones
- Comentarios ::
  - Entregado a tiempo; lo recibo extempor√°neo por confusi√≥n con el directorio
    de entrega
  - Agradezco la franqueza con que me indicas que resolviste el problema con la
    ayuda de ChatGPT
    - Sin embargo... No me queda claro que /t√∫ hayas logrado una soluci√≥n/, ni
      que hayas comprendido el c√≥digo m√°s all√° de copiarlo
    - ...ni de que la soluci√≥n sea verdaeramente correcta. Revisa la
      ejecuci√≥n. ¬°Los gatos se comen a decenas de ratones, no intentan
      evitarlos! ¬°Y el que se coman a un rat√≥n no /lo saca del juego/!
    - Te doy nota de /entregado en tiempo, pero no puedo darte m√°s que eso üôÅ
- Calificaci√≥n :: 5

** Miranda V√≠ctor
- Documentaci√≥n :: [[./MirandaVictor/MirandaVictor_Tarea1.pdf][MirandaVictor_Tarea1.pdf]]
- Archivos :: [[./MirandaVictor/MirandaVictorT1.cpp][MirandaVictorT1.cpp]]
- Problema resuelto :: Gatos y ratones
- Comentarios ::
  - Entregado a tiempo; lo recibo extempor√°neo por confusi√≥n con el directorio
    de entrega
  - ¬°Muy bien por el uso de variables de condici√≥n!
    - Sin embargo, =catSeenMouse= se mantiene siempre falso (nunca lo haces
      =true=). ¬øEs posible acaso que un gato atrape a un rat√≥n? Me parece que no
    - Prob√© subirlo durante el tiempo de vida de =cat()=, y el pobre ratoncito
      era capturado el 100% de las ocasiones üôÅ
    - Revisen las soluciones propuestas por sus compa√±eros...
- Calificaci√≥n :: 7

** Moreno Edgar, Osorio Rodrigo
- Documentaci√≥n :: [[./MorenoEdgar-OsorioRodrigo/README.md][README.md]], [[./MorenoEdgar-OsorioRodrigo/img/fin_programa.png][fin_programa.png]], [[./MorenoEdgar-OsorioRodrigo/img/inicio_programa.png][inicio_programa.png]]
- Archivos :: [[./MorenoEdgar-OsorioRodrigo/CatsAndRats/CatsAndRats.sln][CatsAndRats.sln]], [[./MorenoEdgar-OsorioRodrigo/CatsAndRats/sistop/CatsAndRats.cs][CatsAndRats.cs]], [[./MorenoEdgar-OsorioRodrigo/CatsAndRats/sistop/Program.cs][Program.cs]], [[./MorenoEdgar-OsorioRodrigo/CatsAndRats/sistop/sistop.csproj][sistop.csproj]]
- Problema resuelto :: Gatos y ratones
- Comentarios ::
  - Disculpa aceptada üôÉ Espero que no se sientan ofendidos si me limito a leer
    y comentar el c√≥digo, sin llegar a ejecutarlo (me duele mover tantos bits
    para instalar .NET, para tener que borrarlos poquito despu√©s...)
  - ¬°Buen√≠simo por permitir especificar los par√°metros desde l√≠nea de comando!
  - Jejeje, me gusta esa parte de la /l√≥gica macabra/ en que es responsabilidad
    del rat√≥n verificar si fue aniquilado por la presencia de un gato üòâ (no
    deber√≠a ser as√≠, pero... ¬°Fuera de ese detalle, manejan una sincronizaci√≥n
    expl√≠cita muy buena!)
- Calificaci√≥n :: 10

** Mota Carolina
- Documentaci√≥n :: [[./MotaCarolina/TareaCubiculo.html][TareaCubiculo.html]]
- Archivos :: [[./MotaCarolina/TareaCubiculo.py][TareaCubiculo.py]]
- Problema resuelto :: Los alumnos y el asesor
- Comentarios ::
  - Viendo la ejecuci√≥n, ¬°me emocion√©! Salida bonita, colorizada. Buen
    intercambio de contextos. Sin embargo... no entiendo bien los puntos en que
    van siendo interrumpidos
    - Y es que hay s√≥lo dos sincronizaciones: Qui√©n tiene la palabra (=dudas[]=
      en =pregunto()= / =baja_mano()= y =mut_contador= (en =pregunta()=).
    - ¬°No es el profesor el que resuelve las dudas! El muy flojo se limita a
      darle entrada a los alumnos, y ni siquiera se queda a escuchar. Para
      cuando llega el primer =alumno()=, el profesor ya est√° huyendo rumbo su
      casita...
    - Tendr√≠a que haber alguna interacci√≥n mediada por =se√±alizaci√≥n= de forma
      que un =profesor()= fuera dando atenci√≥n a cada una de las preguntas.
- Calificaci√≥n :: 8

** Perez Jose
- Documentaci√≥n :: [[./PerezJose/documentacion.txt][documentacion.txt]]
- Archivos :: [[./PerezJose/TAREA1.cpp][TAREA1.cpp]]
- Problema resuelto :: Gatos y ratones
- Comentarios ::
  - ¬°Me gusta tu estrategia de divisi√≥n por horarios! (y la retroalimentaci√≥n
    del due√±o üòâ)
  - Desarrollando un poco m√°s la idea, el cambio de horarios no deber√≠a ser
    manejado por =raton()= y =gato()=, sino que podr√≠a haber un tercer hilo,
    =reloj()=, manejando los turnos
    - De forma que no dependiera /tanto/ del azar: Como lo tienen ahora,
      /cualquier/ =gato()= y /cualquier/ =raton()= causan el cambio de turnos,
      dejando desprotegidos / mal-obligados a quienes est√©n a√∫n comiendo o
      lleguen antes de tiempo
    - para comprender m√°s respecto a las complejidades del manejo de turnos, les
      sugiero ver el /problema del jard√≠n bardeado/ como fue planteado, antes de
      la invenci√≥n de los sem√°foros, por Dekker.
- Calificaci√≥n :: 10

** Robles Alan
- Documentaci√≥n :: [[./RoblesAlan/README.md][README.md]], [[./RoblesAlan/img/1.-ImportacionDeBibliotecas.png][1.-ImportacionDeBibliotecas.png]], [[./RoblesAlan/img/2.-DefinicionDeVariables.png][2.-DefinicionDeVariables.png]], [[./RoblesAlan/img/3.-InicializacionDeSemaforos.png][3.-InicializacionDeSemaforos.png]], [[./RoblesAlan/img/4.-DefinicionFuncionGatos.png][4.-DefinicionFuncionGatos.png]], [[./RoblesAlan/img/5.-DefinicionFuncionRatones.png][5.-DefinicionFuncionRatones.png]], [[./RoblesAlan/img/6.-CreacionDeHilos.png][6.-CreacionDeHilos.png]], [[./RoblesAlan/img/7.-InicioDeHilos.png][7.-InicioDeHilos.png]], [[./RoblesAlan/img/8.-EsperaHilosTerminen.png][8.-EsperaHilosTerminen.png]], [[./RoblesAlan/img/9.-MensajeDeFinalizacion.png][9.-MensajeDeFinalizacion.png]], [[./RoblesAlan/img/Python-logo.png][Python-logo.png]]
- Archivos :: [[./RoblesAlan/tarea.py][tarea.py]]
- Problema resuelto :: Gatos y ratones
- Comentarios ::
  - Detalle de nombres, no de uso: Tendr√≠a que ser =multiplex_platos=, no
    =mutex_platos=, ¬øno?
  - ¬°Me parece muy buena implementaci√≥n! üòÉ
  - Muy buena documentaci√≥n tambi√©n.
- Calificaci√≥n :: 10

** Rodr√≠guez Santiago, Villase√±or Carlos
- Documentaci√≥n :: [[./Rodr√≠guezSantiago-Villase√±orCarlos/Rodr√≠guezSantiago-Villase√±orCarlos.txt][Rodr√≠guezSantiago-Villase√±orCarlos.txt]]
- Archivos :: [[./Rodr√≠guezSantiago-Villase√±orCarlos/interseccion_de_caminos.py][interseccion_de_caminos.py]]
- Problema resuelto :: Intersecci√≥n de caminos
- Comentarios ::
  - ¬°Guau! Me gusta el c√≥mo hicieron la representaci√≥n gr√°fica del movimiento,
    ayuda mucho a entender la resoluci√≥n del problema. Pero llev√≥ a _much√≠sima_
    repetici√≥n de c√≥digo. Lean por favor la nota general sobre /Don't Repeat
    Yourself (DRY)/. La legibilidad y modularidad de su programa podr√≠a
    beneficiarse *much√≠simo* de un poquito de parametrizaci√≥n.
    - Estoy seguro de que podr√≠amos optimizar m√°s de una cosa, y me encantar√≠a
      sugerirlo... ¬°pero el c√≥digo no-DRY queda /demasiado barroco/ como para
      intentar /meterle tijera/!
- Calificaci√≥n :: 10

  
